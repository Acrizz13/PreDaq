// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using sobee_core.Models.AzureModels;

#nullable disable

namespace sobee_core.Migrations {
    [DbContext(typeof(SobeecoredbContext))]
    [Migration("20240408010855_NewColumns")]
    partial class NewColumns {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder) {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AspNetUserRole", b => {
                b.Property<string>("UserId")
                    .HasColumnType("nvarchar(450)");

                b.Property<string>("RoleId")
                    .HasColumnType("nvarchar(450)");

                b.HasKey("UserId", "RoleId");

                b.HasIndex(new[] { "RoleId" }, "IX_AspNetUserRoles_RoleId");

                b.ToTable("AspNetUserRoles", (string)null);
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.Identity.AspNetRole", b => {
                b.Property<string>("Id")
                    .HasColumnType("nvarchar(450)");

                b.Property<string>("ConcurrencyStamp")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Name")
                    .HasMaxLength(256)
                    .HasColumnType("nvarchar(256)");

                b.Property<string>("NormalizedName")
                    .HasMaxLength(256)
                    .HasColumnType("nvarchar(256)");

                b.HasKey("Id");

                b.HasIndex(new[] { "NormalizedName" }, "RoleNameIndex")
                    .IsUnique()
                    .HasFilter("([NormalizedName] IS NOT NULL)");

                b.ToTable("AspNetRoles");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.Identity.AspNetRoleClaim", b => {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<string>("ClaimType")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("ClaimValue")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("RoleId")
                    .IsRequired()
                    .HasColumnType("nvarchar(450)");

                b.HasKey("Id");

                b.HasIndex(new[] { "RoleId" }, "IX_AspNetRoleClaims_RoleId");

                b.ToTable("AspNetRoleClaims");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.Identity.AspNetUser", b => {
                b.Property<string>("Id")
                    .HasColumnType("nvarchar(450)");

                b.Property<int>("AccessFailedCount")
                    .HasColumnType("int");

                b.Property<string>("ConcurrencyStamp")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Email")
                    .HasMaxLength(256)
                    .HasColumnType("nvarchar(256)");

                b.Property<bool>("EmailConfirmed")
                    .HasColumnType("bit");

                b.Property<bool>("LockoutEnabled")
                    .HasColumnType("bit");

                b.Property<DateTimeOffset?>("LockoutEnd")
                    .HasColumnType("datetimeoffset");

                b.Property<string>("NormalizedEmail")
                    .HasMaxLength(256)
                    .HasColumnType("nvarchar(256)");

                b.Property<string>("NormalizedUserName")
                    .HasMaxLength(256)
                    .HasColumnType("nvarchar(256)");

                b.Property<string>("PasswordHash")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("PhoneNumber")
                    .HasColumnType("nvarchar(max)");

                b.Property<bool>("PhoneNumberConfirmed")
                    .HasColumnType("bit");

                b.Property<string>("SecurityStamp")
                    .HasColumnType("nvarchar(max)");

                b.Property<bool>("TwoFactorEnabled")
                    .HasColumnType("bit");

                b.Property<string>("UserName")
                    .HasMaxLength(256)
                    .HasColumnType("nvarchar(256)");

                b.HasKey("Id");

                b.HasIndex(new[] { "NormalizedEmail" }, "EmailIndex");

                b.HasIndex(new[] { "NormalizedUserName" }, "UserNameIndex")
                    .IsUnique()
                    .HasFilter("([NormalizedUserName] IS NOT NULL)");

                b.ToTable("AspNetUsers");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.Identity.AspNetUserClaim", b => {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<string>("ClaimType")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("ClaimValue")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("UserId")
                    .IsRequired()
                    .HasColumnType("nvarchar(450)");

                b.HasKey("Id");

                b.HasIndex(new[] { "UserId" }, "IX_AspNetUserClaims_UserId");

                b.ToTable("AspNetUserClaims");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.Identity.AspNetUserLogin", b => {
                b.Property<string>("LoginProvider")
                    .HasMaxLength(128)
                    .HasColumnType("nvarchar(128)");

                b.Property<string>("ProviderKey")
                    .HasMaxLength(128)
                    .HasColumnType("nvarchar(128)");

                b.Property<string>("ProviderDisplayName")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("UserId")
                    .IsRequired()
                    .HasColumnType("nvarchar(450)");

                b.HasKey("LoginProvider", "ProviderKey");

                b.HasIndex(new[] { "UserId" }, "IX_AspNetUserLogins_UserId");

                b.ToTable("AspNetUserLogins");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.Identity.AspNetUserToken", b => {
                b.Property<string>("UserId")
                    .HasColumnType("nvarchar(450)");

                b.Property<string>("LoginProvider")
                    .HasMaxLength(128)
                    .HasColumnType("nvarchar(128)");

                b.Property<string>("Name")
                    .HasMaxLength(128)
                    .HasColumnType("nvarchar(128)");

                b.Property<string>("Value")
                    .HasColumnType("nvarchar(max)");

                b.HasKey("UserId", "LoginProvider", "Name");

                b.ToTable("AspNetUserTokens");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.Tadmin", b => {
                b.Property<int>("IntAdminId")
                    .HasColumnType("int")
                    .HasColumnName("intAdminID");

                b.Property<string>("StrAdminName")
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnType("varchar(255)")
                    .HasColumnName("strAdminName");

                b.HasKey("IntAdminId")
                    .HasName("TAdmins_PK");

                b.ToTable("TAdmins", "db_owner");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.TcartItem", b => {
                b.Property<int>("IntCartItemId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .HasColumnName("intCartItemID");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IntCartItemId"));

                b.Property<DateTime?>("DtmDateAdded")
                    .HasColumnType("datetime")
                    .HasColumnName("dtmDateAdded");

                b.Property<int?>("IntProductId")
                    .HasColumnType("int")
                    .HasColumnName("intProductID");

                b.Property<int?>("IntQuantity")
                    .HasColumnType("int")
                    .HasColumnName("intQuantity");

                b.Property<int?>("IntShoppingCartId")
                    .HasColumnType("int")
                    .HasColumnName("intShoppingCartID");

                b.HasKey("IntCartItemId")
                    .HasName("PK__TCartIte__4A33868DF604DCCF");

                b.HasIndex(new[] { "IntProductId" }, "IX_TCartItems_intProductID");

                b.HasIndex(new[] { "IntShoppingCartId" }, "IX_TCartItems_intShoppingCartID");

                b.ToTable("TCartItems", "db_owner");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.Tcity", b => {
                b.Property<int>("IntCityId")
                    .HasColumnType("int")
                    .HasColumnName("intCityID");

                b.Property<string>("StrCity")
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnType("varchar(255)")
                    .HasColumnName("strCity");

                b.HasKey("IntCityId")
                    .HasName("TCities_PK");

                b.ToTable("TCities", "db_owner");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.Tcoupon", b => {
                b.Property<int>("IntCouponId")
                    .HasColumnType("int")
                    .HasColumnName("intCouponID");

                b.Property<DateTime>("DtmExpirationDate")
                    .HasColumnType("datetime")
                    .HasColumnName("dtmExpirationDate");

                b.Property<string>("StrCouponCode")
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnType("varchar(255)")
                    .HasColumnName("strCouponCode");

                b.Property<string>("StrDiscountAmount")
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnType("varchar(255)")
                    .HasColumnName("strDiscountAmount");

                b.HasKey("IntCouponId")
                    .HasName("TCoupons_PK");

                b.ToTable("TCoupons", "db_owner");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.TcustomerServiceTicket", b => {
                b.Property<int>("IntCustomerServiceTicketId")
                    .HasColumnType("int")
                    .HasColumnName("intCustomerServiceTicketID");

                b.Property<DateTime>("DtmTimeOfSubmission")
                    .HasColumnType("datetime")
                    .HasColumnName("dtmTimeOfSubmission");

                b.Property<int>("IntTicketCategoryId")
                    .HasColumnType("int")
                    .HasColumnName("intTicketCategoryID");

                b.Property<int>("IntTicketStatusId")
                    .HasColumnType("int")
                    .HasColumnName("intTicketStatusID");

                b.Property<int>("IntUserId")
                    .HasColumnType("int")
                    .HasColumnName("intUserID");

                b.Property<string>("SessionId")
                    .HasMaxLength(450)
                    .HasColumnType("nvarchar(450)")
                    .HasColumnName("session_id");

                b.Property<string>("StrDescription")
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnType("varchar(255)")
                    .HasColumnName("strDescription");

                b.Property<string>("UserId")
                    .HasMaxLength(450)
                    .HasColumnType("nvarchar(450)")
                    .HasColumnName("user_id");

                b.HasKey("IntCustomerServiceTicketId")
                    .HasName("TCustomerServiceTickets_PK");

                b.HasIndex(new[] { "IntTicketCategoryId" }, "IX_TCustomerServiceTickets_intTicketCategoryID");

                b.HasIndex(new[] { "IntTicketStatusId" }, "IX_TCustomerServiceTickets_intTicketStatusID");

                b.HasIndex(new[] { "IntUserId" }, "IX_TCustomerServiceTickets_intUserID");

                b.ToTable("TCustomerServiceTickets", "db_owner");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.TdrinkCategory", b => {
                b.Property<int>("IntDrinkCategoryId")
                    .HasColumnType("int")
                    .HasColumnName("intDrinkCategoryID");

                b.Property<string>("StrDrinkCategory")
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnType("varchar(255)")
                    .HasColumnName("strDrinkCategory");

                b.HasKey("IntDrinkCategoryId")
                    .HasName("TDrinkCategories_PK");

                b.ToTable("TDrinkCategories", "db_owner");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.Tfavorite", b => {
                b.Property<int>("IntFavoriteId")
                    .HasColumnType("int")
                    .HasColumnName("intFavoriteID");

                b.Property<string>("StrFavorite")
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnType("varchar(255)")
                    .HasColumnName("strFavorite");

                b.HasKey("IntFavoriteId")
                    .HasName("TFavorites_PK");

                b.ToTable("TFavorites", "db_owner");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.Tflavor", b => {
                b.Property<int>("IntFlavorId")
                    .HasColumnType("int")
                    .HasColumnName("intFlavorID");

                b.Property<string>("StrFlavor")
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnType("varchar(255)")
                    .HasColumnName("strFlavor");

                b.HasKey("IntFlavorId")
                    .HasName("TFlavors_PK");

                b.ToTable("TFlavors", "db_owner");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.Tgender", b => {
                b.Property<int>("IntGenderId")
                    .HasColumnType("int")
                    .HasColumnName("intGenderID");

                b.Property<string>("StrGender")
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnType("varchar(255)")
                    .HasColumnName("strGender");

                b.HasKey("IntGenderId")
                    .HasName("TGenders_PK");

                b.ToTable("TGenders", "db_owner");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.Tingredient", b => {
                b.Property<int>("IntIngredientId")
                    .HasColumnType("int")
                    .HasColumnName("intIngredientID");

                b.Property<string>("StrIngredient")
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnType("varchar(255)")
                    .HasColumnName("strIngredient");

                b.HasKey("IntIngredientId")
                    .HasName("TIngredients_PK");

                b.ToTable("TIngredients", "db_owner");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.Torder", b => {
                b.Property<int>("IntOrderId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .HasColumnName("intOrderID");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IntOrderId"));

                b.Property<decimal?>("DecTotalAmount")
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("decTotalAmount");

                b.Property<DateTime?>("DtmOrderDate")
                    .HasColumnType("datetime")
                    .HasColumnName("dtmOrderDate");

                b.Property<int?>("IntPaymentMethod")
                    .HasColumnType("int")
                    .HasColumnName("intPaymentMethod");

                b.Property<int?>("IntShippingStatusId")
                    .HasColumnType("int")
                    .HasColumnName("intShippingStatusID");

                b.Property<int?>("IntUserId")
                    .HasColumnType("int")
                    .HasColumnName("intUserID");

                b.Property<string>("SessionId")
                    .HasMaxLength(450)
                    .HasColumnType("nvarchar(450)")
                    .HasColumnName("session_id");

                b.Property<string>("StrOrderStatus")
                    .ValueGeneratedOnAdd()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnType("varchar(50)")
                    .HasDefaultValue("Pending")
                    .HasColumnName("strOrderStatus");

                b.Property<string>("StrShippingAddress")
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnType("varchar(255)")
                    .HasColumnName("strShippingAddress");

                b.Property<string>("StrTrackingNumber")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnType("varchar(50)")
                    .HasColumnName("strTrackingNumber");

                b.Property<string>("UserId")
                    .HasMaxLength(450)
                    .HasColumnType("nvarchar(450)")
                    .HasColumnName("user_id");

                b.HasKey("IntOrderId")
                    .HasName("PK__TOrders__447BBC44701D10E7");

                b.HasIndex(new[] { "IntPaymentMethod" }, "IX_TOrders_intPaymentMethod");

                b.HasIndex(new[] { "IntShippingStatusId" }, "IX_TOrders_intShippingStatusID");

                b.HasIndex(new[] { "IntUserId" }, "IX_TOrders_intUserID");

                b.ToTable("TOrders", "db_owner");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.TorderItem", b => {
                b.Property<int>("IntOrderItemId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .HasColumnName("intOrderItemID");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IntOrderItemId"));

                b.Property<int?>("IntOrderId")
                    .HasColumnType("int")
                    .HasColumnName("intOrderID");

                b.Property<int?>("IntProductId")
                    .HasColumnType("int")
                    .HasColumnName("intProductID");

                b.Property<int?>("IntQuantity")
                    .HasColumnType("int")
                    .HasColumnName("intQuantity");

                b.Property<decimal?>("MonPricePerUnit")
                    .HasColumnType("money")
                    .HasColumnName("monPricePerUnit");

                b.HasKey("IntOrderItemId")
                    .HasName("PK__TOrderIt__33B60225C247E2F9");

                b.HasIndex(new[] { "IntOrderId" }, "IX_TOrderItems_intOrderID");

                b.HasIndex(new[] { "IntProductId" }, "IX_TOrderItems_intProductID");

                b.ToTable("TOrderItems", "db_owner");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.TordersProduct", b => {
                b.Property<int>("IntOrdersProductId")
                    .HasColumnType("int")
                    .HasColumnName("intOrdersProductID");

                b.Property<int>("IntProductId")
                    .HasColumnType("int")
                    .HasColumnName("intProductID");

                b.Property<string>("StrOrdersProduct")
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnType("varchar(255)")
                    .HasColumnName("strOrdersProduct");

                b.HasKey("IntOrdersProductId")
                    .HasName("TOrdersProducts_PK");

                b.HasIndex(new[] { "IntProductId" }, "IX_TOrdersProducts_intProductID");

                b.ToTable("TOrdersProducts", "db_owner");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.Tpayment", b => {
                b.Property<int>("IntPaymentId")
                    .HasColumnType("int")
                    .HasColumnName("intPaymentID");

                b.Property<int?>("IntPaymentMethod")
                    .HasColumnType("int")
                    .HasColumnName("intPaymentMethod");

                b.Property<int?>("IntPaymentMethodId")
                    .HasColumnType("int")
                    .HasColumnName("intPaymentMethodID");

                b.Property<string>("StrBillingAddress")
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnType("varchar(255)")
                    .HasColumnName("strBillingAddress");

                b.HasKey("IntPaymentId")
                    .HasName("TPayments_PK");

                b.ToTable("TPayments", "db_owner");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.TpaymentMethod", b => {
                b.Property<int>("IntPaymentMethod")
                    .HasColumnType("int")
                    .HasColumnName("intPaymentMethod");

                b.Property<string>("StrPaymentMethodName")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnType("varchar(50)")
                    .HasColumnName("strPaymentMethodName");

                b.HasKey("IntPaymentMethod")
                    .HasName("PK__TPayment__74D498AF47686B80");

                b.ToTable("TPaymentMethods", "db_owner");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.TpaymentStatus", b => {
                b.Property<int>("IntPaymentStatusId")
                    .HasColumnType("int")
                    .HasColumnName("intPaymentStatusID");

                b.Property<string>("StrPaymentStatus")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnType("varchar(50)")
                    .HasColumnName("strPaymentStatus");

                b.HasKey("IntPaymentStatusId")
                    .HasName("PK__TPayment__4141EB10ACA7B817");

                b.ToTable("TPaymentStatus", "db_owner");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.Tpermission", b => {
                b.Property<int>("IntPermissionId")
                    .HasColumnType("int")
                    .HasColumnName("intPermissionID");

                b.Property<string>("StrDescription")
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnType("varchar(255)")
                    .HasColumnName("strDescription");

                b.Property<string>("StrPermissionName")
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnType("varchar(255)")
                    .HasColumnName("strPermissionName");

                b.HasKey("IntPermissionId")
                    .HasName("TPermissions_PK");

                b.ToTable("TPermissions", "db_owner");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.Tproduct", b => {
                b.Property<int>("IntProductId")
                    .HasColumnType("int")
                    .HasColumnName("intProductID");

                b.Property<decimal?>("DecPrice")
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("decPrice");

                b.Property<string>("StrName")
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnType("varchar(255)")
                    .HasColumnName("strName");

                b.Property<string>("StrPrice")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnType("varchar(50)")
                    .HasColumnName("strPrice");

                b.Property<string>("StrStockAmount")
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnType("varchar(255)")
                    .HasColumnName("strStockAmount");

                b.HasKey("IntProductId")
                    .HasName("TProducts_PK");

                b.ToTable("TProducts", "db_owner");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.TproductImage", b => {
                b.Property<int>("IntProductImageId")
                    .HasColumnType("int")
                    .HasColumnName("intProductImageID");

                b.Property<string>("StrProductImageUrl")
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnType("varchar(1000)")
                    .HasColumnName("strProductImageURL");

                b.HasKey("IntProductImageId")
                    .HasName("TProductImages_PK");

                b.ToTable("TProductImages", "db_owner");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.TproductRecommendation", b => {
                b.Property<int>("IntProductRecommendationId")
                    .HasColumnType("int")
                    .HasColumnName("intProductRecommendationID");

                b.Property<DateTime>("DtmTimeOfRecommendation")
                    .HasColumnType("datetime")
                    .HasColumnName("dtmTimeOfRecommendation");

                b.Property<int>("IntProductId")
                    .HasColumnType("int")
                    .HasColumnName("intProductID");

                b.Property<int>("IntUserId")
                    .HasColumnType("int")
                    .HasColumnName("intUserID");

                b.Property<string>("SessionId")
                    .HasMaxLength(450)
                    .HasColumnType("nvarchar(450)")
                    .HasColumnName("session_id");

                b.Property<string>("StrRelevantScore")
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnType("varchar(255)")
                    .HasColumnName("strRelevantScore");

                b.Property<string>("UserId")
                    .HasMaxLength(450)
                    .HasColumnType("nvarchar(450)")
                    .HasColumnName("user_id");

                b.HasKey("IntProductRecommendationId")
                    .HasName("TProductRecommendations_PK");

                b.HasIndex(new[] { "IntProductId" }, "IX_TProductRecommendations_intProductID");

                b.HasIndex(new[] { "IntUserId" }, "IX_TProductRecommendations_intUserID");

                b.ToTable("TProductRecommendations", "db_owner");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.Tpromotion", b => {
                b.Property<int>("IntPromotionId")
                    .HasColumnType("int")
                    .HasColumnName("intPromotionID");

                b.Property<DateTime>("DtmExpirationDate")
                    .HasColumnType("datetime")
                    .HasColumnName("dtmExpirationDate");

                b.Property<string>("StrDiscountPercentage")
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnType("varchar(255)")
                    .HasColumnName("strDiscountPercentage");

                b.Property<string>("StrPromoCode")
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnType("varchar(255)")
                    .HasColumnName("strPromoCode");

                b.HasKey("IntPromotionId")
                    .HasName("TPromotions_PK");

                b.ToTable("TPromotions", "db_owner");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.Trace", b => {
                b.Property<int>("IntRaceId")
                    .HasColumnType("int")
                    .HasColumnName("intRaceID");

                b.Property<string>("StrRace")
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnType("varchar(255)")
                    .HasColumnName("strRace");

                b.HasKey("IntRaceId")
                    .HasName("TRaces_PK");

                b.ToTable("TRaces", "db_owner");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.Treview", b => {
                b.Property<int>("IntReviewId")
                    .HasColumnType("int")
                    .HasColumnName("intReviewID");

                b.Property<int>("IntProductId")
                    .HasColumnType("int")
                    .HasColumnName("intProductID");

                b.Property<int>("IntUserId")
                    .HasColumnType("int")
                    .HasColumnName("intUserID");

                b.Property<string>("SessionId")
                    .HasMaxLength(450)
                    .HasColumnType("nvarchar(450)")
                    .HasColumnName("session_id");

                b.Property<string>("StrRating")
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnType("varchar(255)")
                    .HasColumnName("strRating");

                b.Property<string>("StrReviewText")
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnType("varchar(1000)")
                    .HasColumnName("strReviewText");

                b.Property<string>("UserId")
                    .HasMaxLength(450)
                    .HasColumnType("nvarchar(450)")
                    .HasColumnName("user_id");

                b.HasKey("IntReviewId")
                    .HasName("TReviews_PK");

                b.HasIndex(new[] { "IntProductId" }, "IX_TReviews_intProductID");

                b.HasIndex(new[] { "IntUserId" }, "IX_TReviews_intUserID");

                b.ToTable("TReviews", "db_owner");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.TshippingMethod", b => {
                b.Property<int>("IntShippingMethodId")
                    .HasColumnType("int")
                    .HasColumnName("intShippingMethodID");

                b.Property<DateTime>("DtmEstimatedDelivery")
                    .HasColumnType("datetime")
                    .HasColumnName("dtmEstimatedDelivery");

                b.Property<string>("StrBillingAddress")
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnType("varchar(255)")
                    .HasColumnName("strBillingAddress");

                b.Property<string>("StrCost")
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnType("varchar(255)")
                    .HasColumnName("strCost");

                b.Property<string>("StrShippingName")
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnType("varchar(255)")
                    .HasColumnName("strShippingName");

                b.HasKey("IntShippingMethodId")
                    .HasName("TShippingMethods_PK");

                b.ToTable("TShippingMethods", "db_owner");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.TshippingStatus", b => {
                b.Property<int>("IntShippingStatusId")
                    .HasColumnType("int")
                    .HasColumnName("intShippingStatusID");

                b.Property<string>("StrShippingStatus")
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnType("varchar(255)")
                    .HasColumnName("strShippingStatus");

                b.HasKey("IntShippingStatusId")
                    .HasName("TShippingStatus_PK");

                b.ToTable("TShippingStatus", "db_owner");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.TshoppingCart", b => {
                b.Property<int>("IntShoppingCartId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .HasColumnName("intShoppingCartID");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IntShoppingCartId"));

                b.Property<DateTime?>("DtmDateCreated")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("datetime")
                    .HasColumnName("dtmDateCreated")
                    .HasDefaultValueSql("(getdate())");

                b.Property<DateTime?>("DtmDateLastUpdated")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("datetime")
                    .HasColumnName("dtmDateLastUpdated")
                    .HasDefaultValueSql("(getdate())");

                b.Property<string>("SessionId")
                    .HasMaxLength(450)
                    .HasColumnType("nvarchar(450)")
                    .HasColumnName("session_id");

                b.Property<string>("UserId")
                    .HasMaxLength(450)
                    .HasColumnType("nvarchar(450)")
                    .HasColumnName("user_id");

                b.HasKey("IntShoppingCartId")
                    .HasName("PK__TShoppin__0A3129171F137CD2");

                b.ToTable("TShoppingCarts", "db_owner");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.Tstate", b => {
                b.Property<int>("IntStateId")
                    .HasColumnType("int")
                    .HasColumnName("intStateID");

                b.Property<string>("StrState")
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnType("varchar(255)")
                    .HasColumnName("strState");

                b.HasKey("IntStateId")
                    .HasName("TStates_PK");

                b.ToTable("TStates", "db_owner");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.TticketCategory", b => {
                b.Property<int>("IntTicketCategoryId")
                    .HasColumnType("int")
                    .HasColumnName("intTicketCategoryID");

                b.Property<string>("StrTicketCategory")
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnType("varchar(255)")
                    .HasColumnName("strTicketCategory");

                b.HasKey("IntTicketCategoryId")
                    .HasName("TTicketCategories_PK");

                b.ToTable("TTicketCategories", "db_owner");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.TticketStatus", b => {
                b.Property<int>("IntTicketStatusId")
                    .HasColumnType("int")
                    .HasColumnName("intTicketStatusID");

                b.Property<string>("StrTicketStatus")
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnType("varchar(255)")
                    .HasColumnName("strTicketStatus");

                b.HasKey("IntTicketStatusId")
                    .HasName("TTicketStatus_PK");

                b.ToTable("TTicketStatus", "db_owner");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.Tuser", b => {
                b.Property<int>("IntUserId")
                    .HasColumnType("int")
                    .HasColumnName("intUserID");

                b.Property<string>("Id")
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)")
                    .HasColumnName("ID");

                b.Property<int?>("IntUserRoleId")
                    .HasColumnType("int")
                    .HasColumnName("intUserRoleID");

                b.Property<string>("StrBillingAddress")
                    .HasMaxLength(255)
                    .HasColumnType("nvarchar(255)")
                    .HasColumnName("strBillingAddress");

                b.Property<DateTime?>("StrDateCreated")
                    .HasColumnType("datetime")
                    .HasColumnName("strDateCreated");

                b.Property<string>("StrEmail")
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnType("varchar(255)")
                    .HasColumnName("strEmail");

                b.Property<string>("StrFirstName")
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)")
                    .HasColumnName("strFirstName");

                b.Property<DateTime?>("StrLastLoginDate")
                    .HasColumnType("datetime")
                    .HasColumnName("strLastLoginDate");

                b.Property<string>("StrLastName")
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)")
                    .HasColumnName("strLastName");

                b.Property<string>("StrPassword")
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnType("varchar(255)")
                    .HasColumnName("strPassword");

                b.Property<string>("StrShippingAddress")
                    .HasColumnType("nvarchar(max)")
                    .HasColumnName("strShippingAddress");

                b.HasKey("IntUserId")
                    .HasName("TUsers_PK");

                b.HasIndex(new[] { "IntUserRoleId" }, "IX_TUsers_intUserRoleID");

                b.ToTable("TUsers", "db_owner");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.TuserRole", b => {
                b.Property<int>("IntUserRoleId")
                    .HasColumnType("int")
                    .HasColumnName("intUserRoleID");

                b.Property<string>("StrRole")
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnType("varchar(255)")
                    .HasColumnName("strRole");

                b.HasKey("IntUserRoleId")
                    .HasName("TUserRoles_PK");

                b.ToTable("TUserRoles", "db_owner");
            });

            modelBuilder.Entity("AspNetUserRole", b => {
                b.HasOne("sobee_core.Models.AzureModels.Identity.AspNetRole", null)
                    .WithMany()
                    .HasForeignKey("RoleId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("sobee_core.Models.AzureModels.Identity.AspNetUser", null)
                    .WithMany()
                    .HasForeignKey("UserId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.Identity.AspNetRoleClaim", b => {
                b.HasOne("sobee_core.Models.AzureModels.Identity.AspNetRole", "Role")
                    .WithMany("AspNetRoleClaims")
                    .HasForeignKey("RoleId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Role");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.Identity.AspNetUserClaim", b => {
                b.HasOne("sobee_core.Models.AzureModels.Identity.AspNetUser", "User")
                    .WithMany("AspNetUserClaims")
                    .HasForeignKey("UserId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("User");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.Identity.AspNetUserLogin", b => {
                b.HasOne("sobee_core.Models.AzureModels.Identity.AspNetUser", "User")
                    .WithMany("AspNetUserLogins")
                    .HasForeignKey("UserId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("User");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.Identity.AspNetUserToken", b => {
                b.HasOne("sobee_core.Models.AzureModels.Identity.AspNetUser", "User")
                    .WithMany("AspNetUserTokens")
                    .HasForeignKey("UserId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("User");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.TcartItem", b => {
                b.HasOne("sobee_core.Models.AzureModels.Tproduct", "IntProduct")
                    .WithMany("TcartItems")
                    .HasForeignKey("IntProductId")
                    .HasConstraintName("FK__TCartItem__intPr__18EBB532");

                b.HasOne("sobee_core.Models.AzureModels.TshoppingCart", "IntShoppingCart")
                    .WithMany("TcartItems")
                    .HasForeignKey("IntShoppingCartId")
                    .HasConstraintName("FK__TCartItem__intSh__19DFD96B");

                b.Navigation("IntProduct");

                b.Navigation("IntShoppingCart");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.TcustomerServiceTicket", b => {
                b.HasOne("sobee_core.Models.AzureModels.TticketCategory", "IntTicketCategory")
                    .WithMany("TcustomerServiceTickets")
                    .HasForeignKey("IntTicketCategoryId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired()
                    .HasConstraintName("TCustomerServiceTickets_TTicketCategories_FK");

                b.HasOne("sobee_core.Models.AzureModels.TticketStatus", "IntTicketStatus")
                    .WithMany("TcustomerServiceTickets")
                    .HasForeignKey("IntTicketStatusId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired()
                    .HasConstraintName("TCustomerServiceTickets_TTicketStatus_FK");

                b.HasOne("sobee_core.Models.AzureModels.Tuser", "IntUser")
                    .WithMany("TcustomerServiceTickets")
                    .HasForeignKey("IntUserId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired()
                    .HasConstraintName("TCustomerServiceTickets_TUsers_FK");

                b.Navigation("IntTicketCategory");

                b.Navigation("IntTicketStatus");

                b.Navigation("IntUser");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.Torder", b => {
                b.HasOne("sobee_core.Models.AzureModels.TpaymentMethod", "IntPaymentMethodNavigation")
                    .WithMany("Torders")
                    .HasForeignKey("IntPaymentMethod")
                    .HasConstraintName("FK_PaymentMethod");

                b.HasOne("sobee_core.Models.AzureModels.TshippingStatus", "IntShippingStatus")
                    .WithMany("Torders")
                    .HasForeignKey("IntShippingStatusId")
                    .HasConstraintName("FK_TOrders_TShippingStatus");

                b.HasOne("sobee_core.Models.AzureModels.Tuser", "IntUser")
                    .WithMany("Torders")
                    .HasForeignKey("IntUserId")
                    .HasConstraintName("FK__TOrders__intUser__208CD6FA");

                b.Navigation("IntPaymentMethodNavigation");

                b.Navigation("IntShippingStatus");

                b.Navigation("IntUser");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.TorderItem", b => {
                b.HasOne("sobee_core.Models.AzureModels.Torder", "IntOrder")
                    .WithMany("TorderItems")
                    .HasForeignKey("IntOrderId")
                    .HasConstraintName("FK__TOrderIte__intOr__1EA48E88");

                b.HasOne("sobee_core.Models.AzureModels.Tproduct", "IntProduct")
                    .WithMany("TorderItems")
                    .HasForeignKey("IntProductId")
                    .HasConstraintName("FK__TOrderIte__intPr__1F98B2C1");

                b.Navigation("IntOrder");

                b.Navigation("IntProduct");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.TordersProduct", b => {
                b.HasOne("sobee_core.Models.AzureModels.Tproduct", "IntProduct")
                    .WithMany("TordersProducts")
                    .HasForeignKey("IntProductId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired()
                    .HasConstraintName("TOrdersProducts_TProducts_FK");

                b.Navigation("IntProduct");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.TproductRecommendation", b => {
                b.HasOne("sobee_core.Models.AzureModels.Tproduct", "IntProduct")
                    .WithMany("TproductRecommendations")
                    .HasForeignKey("IntProductId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired()
                    .HasConstraintName("TProductRecommendations_TProducts_FK");

                b.HasOne("sobee_core.Models.AzureModels.Tuser", "IntUser")
                    .WithMany("TproductRecommendations")
                    .HasForeignKey("IntUserId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired()
                    .HasConstraintName("TProductRecommendations_TUsers_FK");

                b.Navigation("IntProduct");

                b.Navigation("IntUser");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.Treview", b => {
                b.HasOne("sobee_core.Models.AzureModels.Tproduct", "IntProduct")
                    .WithMany("Treviews")
                    .HasForeignKey("IntProductId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired()
                    .HasConstraintName("TReviews_TProducts_FK");

                b.HasOne("sobee_core.Models.AzureModels.Tuser", "IntUser")
                    .WithMany("Treviews")
                    .HasForeignKey("IntUserId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired()
                    .HasConstraintName("TReviews_TUsers_FK");

                b.Navigation("IntProduct");

                b.Navigation("IntUser");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.Tuser", b => {
                b.HasOne("sobee_core.Models.AzureModels.TuserRole", "IntUserRole")
                    .WithMany("Tusers")
                    .HasForeignKey("IntUserRoleId")
                    .HasConstraintName("FK_intUserRoleID");

                b.Navigation("IntUserRole");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.Identity.AspNetRole", b => {
                b.Navigation("AspNetRoleClaims");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.Identity.AspNetUser", b => {
                b.Navigation("AspNetUserClaims");

                b.Navigation("AspNetUserLogins");

                b.Navigation("AspNetUserTokens");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.Torder", b => {
                b.Navigation("TorderItems");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.TpaymentMethod", b => {
                b.Navigation("Torders");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.Tproduct", b => {
                b.Navigation("TcartItems");

                b.Navigation("TorderItems");

                b.Navigation("TordersProducts");

                b.Navigation("TproductRecommendations");

                b.Navigation("Treviews");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.TshippingStatus", b => {
                b.Navigation("Torders");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.TshoppingCart", b => {
                b.Navigation("TcartItems");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.TticketCategory", b => {
                b.Navigation("TcustomerServiceTickets");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.TticketStatus", b => {
                b.Navigation("TcustomerServiceTickets");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.Tuser", b => {
                b.Navigation("TcustomerServiceTickets");

                b.Navigation("Torders");

                b.Navigation("TproductRecommendations");

                b.Navigation("Treviews");
            });

            modelBuilder.Entity("sobee_core.Models.AzureModels.TuserRole", b => {
                b.Navigation("Tusers");
            });
#pragma warning restore 612, 618
        }
    }
}
