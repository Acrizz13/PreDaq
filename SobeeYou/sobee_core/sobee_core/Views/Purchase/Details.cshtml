@using sobee_core.Models.ViewModels

@model ProductDetailsViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Product Details";
}

<head>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css?family=Karla:400,700" rel="stylesheet">

    <link rel="stylesheet" href="~/css/ProductDetailsStyles.css" asp-append-version="true" /> <!-- Include the stylesheet for this page-->
</head>

<div class="container product-detail">
    <div class="product-images">
        <img src="@Url.Content($"~/Images/Products/{Model.Product.strName.Replace(" ", "")}.jpg")" alt="@Model.Product.strName">

        <div class="product-description">
            <h2>Details</h2>
            <p>
            @Model.Product.strDescription
            </p>

        </div>
    </div>

    <div class="product-info">
        <h1>@Model.Product.strName</h1>

 

        <h1 class="price">@Model.Product.decPrice.ToString("C")</h1>

@*         <div class="size-options">
            <span>Cans</span>
            <span>6-Pack</span>
            <span>Bottle</span>
            <span>Bulk Order</span>
        </div> *@

        <form class="cs-item-form" data-product-id="@Model.Product.intProductID" data-product-name="@Model.Product.strName" data-product-price="@Model.Product.decPrice" data-product-stock="@Model.Product.strStockAmount">
            @Html.AntiForgeryToken()
            <input type="hidden" name="Model.intProductID" value="@Model.Product.intProductID" />
            <label for="quantity">Quantity:</label>
            <div class="cs-actions">
                <select class="quantity-dropdown" name="quantity">
                    @for (int i = 1; i <= 10; i++) {
                        <option value="@i">@i</option>
                    }
                </select>
                <div class="cart-button-container">
                    <button type="submit" class="add-to-cart">
                        <span>Add to Cart</span>
                        <span class="arrow">&#10132;</span>
                    </button>

                </div>

            </div>
        </form>

        @if (User.Identity.IsAuthenticated) {
            <button id="addToFavoritesBtn" class="btn btn-primary" data-product-id="@Model.Product.intProductID">Add to Favorites</button>
        }

        <!--average review bars-->
        <div class="product-reviews">
            <h2>Ratings</h2>
            <div class="rating-summary">
                <div class="average-rating">@ViewBag.AverageRating</div>
                <div class="total-reviews">(@ViewBag.TotalReviews reviews)</div>
            </div>
            <div class="rating-bars">
                @foreach (var ratingCount in ViewBag.RatingCounts) {
                    var ratingPercentage = ViewBag.TotalReviews > 0 ? (int)Math.Round((double)ratingCount.Count / ViewBag.TotalReviews * 100) : 0;
                    <div class="rating-bar">
                        <div class="stars">@ratingCount.Rating stars</div>
                        <div class="bar">
                            <div class="fill" style="width: @ratingPercentage%;"></div>
                        </div>
                        <div class="count">@ratingCount.Count</div>
                    </div>
                }
            </div>
        </div>
    </div>

    </div>


</div>

<div class="container"> 

    <div class="related-products">
        <h2>You Might Also Like</h2>
        <div class="product-cards">
            @foreach (var relatedProduct in Model.RelatedProducts) {
                <div class="product-card">
                    <a asp-controller="Purchase" asp-action="Details" asp-route-productID="@relatedProduct.intProductID">
                        <img src="@Url.Content("~/Images/Products/" + relatedProduct.strName.Replace(" ", "") + ".jpg")" alt="@relatedProduct.strName" style="width:100%; height:auto;">
                        <h3>@relatedProduct.strName</h3>
                    </a>
                    <p>@relatedProduct.strDescription</p>
                </div>
            }
        </div>
    </div>





    @if (User.Identity.IsAuthenticated) {
        <div class="leave-review">
            <h2>Leave a Review</h2>
            <div class="form-group">
                <label for="rating">Rating:</label>

                <div class="rating-input">
                    @for (int i = 1; i <= 5; i++) {
                        <span class="star" data-rating="@i">&#9733;</span>
                    }
                    <input type="hidden" id="selectedRating" name="rating" value="0" />
                </div>

            </div>
            <div class="form-group">
                <label for="reviewText">Review:</label>
                <textarea id="reviewText" name="reviewText" class="form-control" rows="4" required></textarea>
            </div>
            <button id="submitReviewBtn" class="btn btn-primary">Submit Review</button>
        </div>
    }


    <!-- Add a container for dynamically loaded reviews -->
    <div id="reviewsContainer">
    </div>

    <!-- Edit Review Modal -->
    <div class="modal fade" id="editReviewModal" tabindex="-1" role="dialog" aria-labelledby="editReviewModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editReviewModalLabel">Edit Review</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">

                    <div class="form-group">
                        <label for="editRating">Rating:</label>
                        <div class="rating-input">
                            @for (int i = 1; i <= 5; i++) {
                                <span class="star" data-rating="@i">&#9733;</span>
                            }
                            <input type="hidden" id="editSelectedRating" name="rating" value="0" />
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="editReviewText">Review:</label>
                        <textarea id="editReviewText" name="reviewText" class="form-control" rows="4" required></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="saveEditReviewBtn">Save Changes</button>
                </div>
            </div>
        </div>
    </div>

</div>


<script>

    function setRating(value) {
        // Remove selected class from all stars
        $('.rating-input .star').removeClass('selected');

        // Add selected class to the stars up to the selected value
        $('.rating-input .star').each(function () {
            if ($(this).data('rating') <= value) {
                $(this).addClass('selected');
            }
        });

        // Update the selected rating value
        $('#selectedRating').val(value);
    }

    function loadReviews() {
        var productId = @Model.Product.intProductID;

        $.ajax({
            url: '@Url.Action("GetReviews", "Purchase")',
            type: 'GET',
            data: { productId: productId },
            success: function (result) {
                $('#reviewsContainer').html(result);
            }
        });
    }

    $(document).ready(function () {
        $('#addToFavoritesBtn').click(function () {
            var productId = $(this).data('product-id');

            $.ajax({
                url: '/Purchase/AddToFavorites',
                type: 'POST',
                data: { productId: productId },
                success: function (response) {
                    if (response.success) {
                        // Display a success message or perform any other desired action
                        alert('Product added to favorites!');
                    } else {
                        // Display an error message or perform any other desired action
                        alert('Failed to add product to favorites.');
                    }
                },
                error: function () {
                    // Display an error message or perform any other desired action
                    alert('An error occurred while adding the product to favorites.');
                }
            });
        });

        // Load the reviews when the page loads
        loadReviews();

        // Set rating when a star is clicked in the "Leave a Review" section
        $('.rating-input .star').on('click', function () {
            var rating = $(this).data('rating');
            setRating(rating);
        });
    });

    $(document).on('click', '.edit-button', function () {
        var reviewId = $(this).data('review-id');
        var reviewText = $(this).closest('.review').find('.review-text').text();
        var reviewRating = $(this).closest('.review').find('.review-rating .filled').length;

        $('#editReviewText').val(reviewText);
        $('#editSelectedRating').val(reviewRating);
        $('#editReviewModal .rating-input .star').removeClass('selected');
        $('#editReviewModal .rating-input .star[data-rating="' + reviewRating + '"]').addClass('selected');

        $('#editReviewModal').modal('show');
        $('#saveEditReviewBtn').data('review-id', reviewId);
    });

    $(document).on('click', '#editReviewModal .rating-input .star', function () {
        var rating = $(this).data('rating');
        $('#editReviewModal .rating-input .star').removeClass('selected');
        $(this).addClass('selected');
        $('#editSelectedRating').val(rating);
    });

    $(document).on('click', '#saveEditReviewBtn', function () {
        var reviewId = $(this).data('review-id');
        var rating = $('#editSelectedRating').val();
        var reviewText = $('#editReviewText').val();

        $.ajax({
            url: '@Url.Action("EditReview", "Purchase")',
            type: 'POST',
            data: { reviewId: reviewId, rating: rating, reviewText: reviewText },
            success: function (response) {
                if (response.success) {
                    loadReviews();
                    $('#editReviewModal').modal('hide');
                } else {
                    alert('Failed to edit the review.');
                }
            }
        });
    });

    $(document).on('click', '.delete-button', function () {
        var reviewId = $(this).data('review-id');
        if (confirm('Are you sure you want to delete this review?')) {
            $.ajax({
                url: '@Url.Action("DeleteReview", "Purchase")',
                type: 'POST',
                data: { reviewId: reviewId },
                success: function (response) {
                    if (response.success) {
                        loadReviews();
                    } else {
                        alert('Failed to delete the review.');
                    }
                }
            });
        }
    });

    $('#submitReviewBtn').on('click', function () {
        var productId = @Model.Product.intProductID;
        var rating = $('#selectedRating').val();
        var reviewText = $('#reviewText').val();

        // Check if the rating is selected (at least one star)
        if (rating == 0) {
            alert('Please select a rating (at least one star).');
            return;
        }

        // Check if the review text is blank
        if (reviewText.trim() === '') {
            alert('Please enter a review text.');
            return;
        }

        $.ajax({
            url: '@Url.Action("SubmitRating", "Purchase")',
            type: 'POST',
            data: { productId: productId, rating: rating, reviewText: reviewText },
            success: function (response) {
                if (response.success) {
                    // Clear the form after successful submission
                    $('.rating-input .star').removeClass('selected');
                    $('#selectedRating').val(0);
                    $('#reviewText').val('');

                    loadReviews();
                } else {
                    // Display the error message
                    alert(response.message);
                }
            }
        });
    });
</script>