@model sobee_core.Models.ProductDetailsViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Product Details";
}

<head>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css?family=Karla:400,700" rel="stylesheet">

    <link rel="stylesheet" href="~/css/ProductDetailsStyles.css" asp-append-version="true" /> <!-- Include the stylesheet for this page-->
</head>

<div class="container product-detail">
    <div class="product-images">
        <img src="@Url.Content($"~/Images/Products/{Model.Product.strName.Replace(" ", "")}.jpg")" alt="@Model.Product.strName">

        <div class="product-description">
            <h2>Details</h2>
            <p>
            @Model.Product.strDescription
            </p>

        </div>
    </div>

    <div class="product-info">
        <h1>@Model.Product.strName</h1>

 

        <h1 class="price">@Model.Product.decPrice.ToString("C")</h1>

@*         <div class="size-options">
            <span>Cans</span>
            <span>6-Pack</span>
            <span>Bottle</span>
            <span>Bulk Order</span>
        </div> *@

        <form class="cs-item-form" data-product-id="@Model.Product.intProductID" data-product-name="@Model.Product.strName" data-product-price="@Model.Product.decPrice" data-product-stock="@Model.Product.strStockAmount">
            @Html.AntiForgeryToken()
            <input type="hidden" name="Model.intProductID" value="@Model.Product.intProductID" />
            <label for="quantity">Quantity:</label>
            <div class="cs-actions">
                <select class="quantity-dropdown" name="quantity">
                    @for (int i = 1; i <= 10; i++) {
                        <option value="@i">@i</option>
                    }
                </select>
                <div class="cart-button-container">
                    <button type="submit" class="add-to-cart">
                        <span>Add to Cart</span>
                        <span class="arrow">&#10132;</span>
                    </button>

                </div>

            </div>
        </form>

        @if (User.Identity.IsAuthenticated) {
            <button id="addToFavoritesBtn" class="btn btn-primary" data-product-id="@Model.Product.intProductID">Add to Favorites</button>
        }


    </div>


</div>

<div class="related-products">
    <h2>You Might Also Like</h2>
    <div class="product-cards">
        @foreach (var relatedProduct in Model.RelatedProducts) {
            <div class="product-card">
                <a asp-controller="Purchase" asp-action="Details" asp-route-id="@relatedProduct.intProductID">
                    <img src="@Url.Content("~/Images/Products/" + relatedProduct.strName.Replace(" ", "") + ".jpg")" alt="@relatedProduct.strName" style="width:100%; height:auto;">
                    <h3>@relatedProduct.strName</h3>
                </a>
                <p>@relatedProduct.strDescription</p>
            </div>
        }
    </div>
</div>

    <!-- Display success or error message -->
    @if (TempData["SuccessMessage"] != null) {
        <div class="alert alert-success">
            @TempData["SuccessMessage"]
        </div>
    }

    @if (TempData["ErrorMessage"] != null) {
        <div class="alert alert-danger">
            @TempData["ErrorMessage"]
        </div>
    }
</div>



@if (User.Identity.IsAuthenticated) {
    <div class="leave-review">
        <h2>Leave a Review</h2>
        <div class="form-group">
            <label for="rating">Rating:</label>
            <div class="rating-input">
                @for (int i = 1; i <= 5; i++) {
                    <span class="star" data-rating="@i">&#9733;</span>
                }
                <input type="hidden" id="selectedRating" name="rating" value="0" />
            </div>
        </div>
        <div class="form-group">
            <label for="reviewText">Review:</label>
            <textarea id="reviewText" name="reviewText" class="form-control" rows="4" required></textarea>
        </div>
        <button id="submitReviewBtn" class="btn btn-primary">Submit Review</button>
    </div>
}



<div class="user-reviews">
    <h2>User Reviews</h2>
    @foreach (var review in ViewBag.UserReviews) {
        <div class="review">
            <div class="review-header">
                <span class="review-user">@review.UserFirstName</span>
                <span class="review-date">@review.ReviewDate.ToString("MM/dd/yyyy")</span>
            </div>
            <div class="review-rating">
                @for (int i = 1; i <= review.Rating; i++) {
                    <span class="star filled">&#9733;</span>
                }
                @for (int i = review.Rating + 1; i <= 5; i++) {
                    <span class="star">&#9733;</span>
                }
            </div>
            <div class="review-text">@review.ReviewText</div>
        </div>
    }
</div>



<script>
    function setRating(value) {
        // Remove filled class from all stars
        for (let i = 1; i <= 5; i++) {
            let star = document.getElementById(`rate${i}`);
            star.classList.remove("filled");
        }

        // Fill stars up to the selected value
        for (let i = 1; i <= value; i++) {
            let star = document.getElementById(`rate${i}`);
            star.classList.add("filled");
        }

        // Update the selected rating in the leave review section
        $('.rating-input .star').removeClass('selected');
        $('.rating-input .star[data-rating="' + value + '"]').addClass('selected');
        $('#selectedRating').val(value);
    }




    $(document).ready(function () {
        $('#addToFavoritesBtn').click(function () {
            var productId = $(this).data('product-id');

            $.ajax({
                url: '/Purchase/AddToFavorites',
                type: 'POST',
                data: { productId: productId },
                success: function (response) {
                    if (response.success) {
                        // Display a success message or perform any other desired action
                        alert('Product added to favorites!');
                    } else {
                        // Display an error message or perform any other desired action
                        alert('Failed to add product to favorites.');
                    }
                },
                error: function () {
                    // Display an error message or perform any other desired action
                    alert('An error occurred while adding the product to favorites.');
                }
            });
        });

        $('.rating-input .star').on('click', function () {
            var rating = $(this).data('rating');
            $('.rating-input .star').removeClass('selected');
            $(this).addClass('selected');
            $('#selectedRating').val(rating);
        });

        $('#submitReviewBtn').on('click', function () {
            var productId = @Model.Product.intProductID;
            var rating = $('#selectedRating').val();
            var reviewText = $('#reviewText').val();

            // Check if the rating is selected (at least one star)
            if (rating == 0) {
                alert('Please select a rating (at least one star).');
                return;
            }

            // Check if the review text is blank
            if (reviewText.trim() === '') {
                alert('Please enter a review text.');
                return;
            }

            $.ajax({
                url: '@Url.Action("SubmitRating", "Purchase")',
                type: 'POST',
                data: { productId: productId, rating: rating, reviewText: reviewText },
                success: function (response) {
                    if (response.success) {
                        // Clear the form after successful submission
                        $('.rating-input .star').removeClass('selected');
                        $('#selectedRating').val(0);
                        $('#reviewText').val('');

                        // Reload the reviews section
                        $.ajax({
                            url: '@Url.Action("GetReviews", "Purchase")',
                            type: 'GET',
                            data: { productId: productId },
                            success: function (result) {
                                $('.user-reviews').html(result);
                            }
                        });
                    } else {
                        // Display the error message
                        alert(response.message);
                    }
                }
            });

            $.ajax({
                url: '@Url.Action("SubmitRating", "Purchase")',
                type: 'POST',
                data: { productId: productId, rating: rating, reviewText: reviewText },
                success: function (response) {
                    if (response.success) {
                        // Clear the form after successful submission
                        $('.rating-input .star').removeClass('selected');
                        $('#selectedRating').val(0);
                        $('#reviewText').val('');

                        // Fetch the updated reviews and update the reviews section
                        $.ajax({
                            url: '@Url.Action("GetReviews", "Purchase")',
                            type: 'GET',
                            data: { productId: productId },
                            success: function (result) {
                                $('.user-reviews').html(result);
                            }
                        });
                    } else {
                        // Display the error message
                        alert(response.message);
                    }
                }
            });
        });
    });
</script>
